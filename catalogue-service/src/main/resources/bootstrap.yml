server:
  port: ${PORT:8095}
spring:
  application:
    # the name of the application represents the global identifier of this microservice.
    name: catalogue-service-srdc
    url: http://localhost:8095
  cloud:
    config:
      uri: ${CONFIG_SERVER_URI:http://localhost:8888}
      # failFast is disabled per default, so that the service can start standalone without config server.
      # failFast should be enabled in production environments.
      # it can be set via an environment variable or the config server
      failFast: ${CONFIG_SERVER_FAILFAST:false}
    discovery:
      # by disabling the service discovery the application/service can be started in "standalone mode".
      # service discovery is disabled by default and should be enabled (set to true) for the "cloud mode".
      # it can be set via an environment variable or the config server
      enabled: ${discovery.enabled:${DISCOVERY_ENABLED:false}}
  jackson:
    mapper:
      PROPAGATE_TRANSIENT_MARKER: true

logstash:
  uri: ${LOGSTASH_URI:localhost:5000}

#### c3p0 database connection pool configurations
com:
  mchange:
    v2:
      c3p0:
        impl:
          DefaultConnectionTester:
            querylessTestRunner: SWITCH
      log:
        MLog: slf4j

persistence:
  syncdb:
    #### Postgres Configs
    driver: org.postgresql.Driver
    connection:
      url: jdbc:postgresql://${SYNC_DB_HOST:localhost}:${SYNC_DB_HOST_PORT:5432}/${SYNC_DB_NAME:catalogsyncdb}?currentSchema=public
    username: ${SYNC_DB_USERNAME:postgres}
    password: ${SYNC_DB_PASSWORD:nimble}
    update_check_interval: 10000

  categorydb:
    driver: org.postgresql.Driver
    connection:
      url: jdbc:postgresql://qdjjtnkv.db.elephantsql.com:5432/mnocjzwc
    username: mnocjzwc
    password: bkryPYM3rj651059qZ73Q_oOvbgg3MDV
    schema: public

  marmotta:
    url: https://nimble-platform.salzburgresearch.at/marmotta

  orm:
    ubl:
      hibernate:
        connection:
          #### Postgres Configs
          url: jdbc:postgresql://${UBL_DB_HOST:localhost}:${UBL_DB_HOST_PORT:5432}/${UBL_DB_NAME:ubldb}?currentSchema=public
          username: ${UBL_DB_USERNAME:postgres}
          password: ${UBL_DB_PASSWORD:nimble}
          driver_class: org.postgresql.Driver
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 0
        c3p0:
          acquireIncrement: 10
          initialPoolSize: 10
          maxPoolSize: 100
          minPoolSize: 10
          maxStatementsPerConnection: 10
          acquireRetryAttempts: 10
          acquireRetryDelay: 100
          numHelperThreads: 10
          testConnectionOnCheckout: true
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        #TODO: below configuration is quite inefficient as it uses a db connection each time a lazy list is initialized
        enable_lazy_load_no_trans: true
        event:
          merge:
            entity_copy_observer: allow

    modaml:
      hibernate:
        connection:
          url: jdbc:h2:file://${user.home}/nimble/modaml;AUTO_SERVER=TRUE;MVCC=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=10;INIT=create schema IF NOT EXISTS APPS
          username: sa
          password:
          driver_class: org.h2.Driver
        dialect: org.hibernate.dialect.H2Dialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 0
        c3p0:
          acquire_increment: 2
          idle_test_period: 60
          min_size: 10
          max_size: 100
          maxStatements: 0
          maxStatementsPerConnection: 100
          timeout: 300
          acquireRetryAttempts: 1
          acquireRetryDelay: 250
          numHelperThreads: 10
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        enable_lazy_load_no_trans: true
        event:
          merge:
            entity_copy_observer: allow
security:
  oauth2:
    authorization:
      check-token-access:

################################################################################################
################################## KUBERNETES CONFIG ###########################################
################################################################################################

---

spring:
  profiles: kubernetes

persistence:
  categorydb:
    driver: org.postgresql.Driver
    connection:
      url: # set in eu.nimble.utility.config.CatalogueServiceConfig
    username: # set in eu.nimble.utility.config.CatalogueServiceConfig
    password: # set in eu.nimble.utility.config.CatalogueServiceConfig
    bluemix:
      credentials_json: ${BLUEMIX_CATEGORY_DB_JSON:}
  orm:
    ubl:
      hibernate:
        connection:
          url: #set in eu.nimble.utility.config.PersistenceConfig
          username: #set in eu.nimble.utility.config.PersistenceConfig
          password: #set in eu.nimble.utility.config.PersistenceConfig
          driver_class: org.postgresql.Driver
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 0
        c3p0:
          acquireIncrement: 10
          initialPoolSize: 10
          maxPoolSize: 100
          minPoolSize: 10
          maxStatementsPerConnection: 10
          acquireRetryAttempts: 10
          acquireRetryDelay: 100
          numHelperThreads: 10
          testConnectionOnCheckout: true
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        event:
          merge:
            entity_copy_observer: allow
      bluemix:
        credentials_json: ${BLUEMIX_UBL_DB_JSON:}
    modaml:
      hibernate:
        connection:
          url: #set in eu.nimble.utility.config.PersistenceConfig
          username: #set in eu.nimble.utility.config.PersistenceConfig
          password: #set in eu.nimble.utility.config.PersistenceConfig
          driver_class: org.postgresql.Driver
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        hbm2ddl:
          auto: update
        cache:
          provider_class: org.hibernate.cache.HashtableCacheProvider
        jdbc:
          batch_size: 0
        c3p0:
          acquire_increment: 2
          idle_test_period: 60
          min_size: 10
          max_size: 100
          maxStatements: 0
          maxStatementsPerConnection: 100
          timeout: 300
          acquireRetryAttempts: 1
          acquireRetryDelay: 250
          numHelperThreads: 10
        use_sql_comments: true
        transaction:
          factory_class: org.hibernate.transaction.JDBCTransactionFactory
        current_session_context_class: thread
        event:
          merge:
            entity_copy_observer: allow
      bluemix:
        credentials_json: ${BLUEMIX_MODAML_DB_JSON:}


################################################################################################
################################### LOCAL DEV CONFIG ###########################################
################################################################################################

---

spring:
  profiles: local_dev
persistence:
  syncdb:
    driver: org.h2.Driver
    connection:
      url: jdbc:h2:file:~/nimble/syncdb;AUTO_SERVER=TRUE;MVCC=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=10;INIT=create schema IF NOT EXISTS APPS
    username: sa
    password:
  orm:
    ubl:
      hibernate:
        connection:
          #### H2 Configs
          url: jdbc:h2:file:${user.home}/nimble/ubl;AUTO_SERVER=TRUE;MVCC=TRUE;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=10;INIT=create schema IF NOT EXISTS APPS
          username: sa
          password:
          driver_class: org.h2.Driver
        dialect: org.hibernate.dialect.H2Dialect

nimble:
  identity:
    url: ${IDENTITY_URL:localhost:9096}